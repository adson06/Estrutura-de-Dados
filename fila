#include <stdio.h>
#include <stdlib.h>

typedef struct no {
    int valor;
    struct no *proximo;
} No;

void inserir(No **fila, int num) {
    No *aux, *novo = malloc(sizeof(No));
    if (novo) {
        novo->valor = num;
        novo->proximo = NULL;
        if (*fila == NULL) {
            *fila = novo;
        } else {
            aux = *fila;
            while (aux->proximo) {
                aux = aux->proximo;
            }
            aux->proximo = novo;
        }
    } else {
        printf("Erro ao alocar memória\n");
    }
}

No* remover(No **fila) {
    No *remover = NULL;
    if (*fila) {
        remover = *fila;
        *fila = remover->proximo;
    } else {
        printf("Fila vazia\n");
    }
    return remover;
}

void imprimir(No *fila) {
    printf("\n\t-------------Fila------------\n");
    while (fila) {
        printf("%d ", fila->valor);
        fila = fila->proximo;
    }
    printf("\n\t-------------Fim da Fila------------\n");
}

int main() {
    No *r, *fila = NULL;
    int opcao, valor;

    do {
        printf("\t0: Sair\n\t1: Inserir\n\t2: Remover\n\t3: Imprimir\n");
        scanf("%d", &opcao);
        switch (opcao) {
            case 1:
                printf("Digite um valor: ");
                scanf("%d", &valor);
                inserir(&fila, valor);
                break;
            case 2:
                r = remover(&fila);
                if (r) {
                    printf("Removido: %d\n", r->valor);
                    free(r);
                }
                break;
            case 3:
                imprimir(fila);
                break;
            default:
                if (opcao != 0) {
                    printf("Opção inválida!\n");
                }
                break;
        }
    } while (opcao != 0);

    return 0;
}
