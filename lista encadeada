#include <stdio.h>
#include <stdlib.h>

typedef struct no {
    int valor;
    struct no *proximo;
} No;

void inserir_no_inicio(No **lista, int num) {
    No *novo = malloc(sizeof(No));
    if (novo) {
        novo->valor = num;
        novo->proximo = *lista;
        *lista = novo;
    } else {
        printf("Erro ao alocar memoria\n");
    }
}

void inserir_no_final(No **lista, int num) {
    No *aux, *novo = malloc(sizeof(No));
    if (novo) {
        novo->valor = num;
        novo->proximo = NULL;

        if (*lista == NULL) {
            *lista = novo;
        } else {
            aux = *lista;
            while (aux->proximo) {
                aux = aux->proximo;
            }
            aux->proximo = novo;
        }
    } else {
        printf("Erro ao alocar memoria\n");
    }
}

No* buscar(No **lista, int num) {
    No *aux = *lista;
    while (aux && aux->valor != num) {
        aux = aux->proximo;
    }
    return aux;
}

void imprimir(No *no) {
    printf("\nLista: ");
    while (no != NULL) {
        printf("%d ", no->valor);
        no = no->proximo;
    }
    printf("\n\n");
}

int main() {
    int opcao, valor;
    No *buscado, *lista = NULL;

    do {
        printf("1: Inserir no Final\n2: Buscar\n3: Imprimir\n0: Sair\n");
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                printf("Digite um valor para inserir: ");
                scanf("%d", &valor);
                inserir_no_final(&lista, valor);
                break;

            case 2:
                printf("Digite um valor para buscar: ");
                scanf("%d", &valor);
                buscado = buscar(&lista, valor);
                if (buscado) {
                    printf("Elemento Encontrado: %d\n", buscado->valor);
                } else {
                    printf("Elemento n√£o encontrado\n");
                }
                break;

            case 3:
                imprimir(lista);
                break;

            case 0:
                printf("Saindo...\n");
                break;

            default:
                printf("Opcao invalida!\n");
                break;
        }
    } while (opcao != 0);

    return 0;
}
